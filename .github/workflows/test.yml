name: Test
on: [ push ]

jobs:
  LowLevelTests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [ { cc: gcc-10, cxx: g++-10 },
                    { cc: gcc-11, cxx: g++-11 },
                    { cc: clang-10, cxx: clang++-10 },
                    { cc: clang-11, cxx: clang++-11 },
                    { cc: clang-12, cxx: clang++-12 },
                    { cc: clang-13, cxx: clang++-13 },
                    { cc: clang-14, cxx: clang++-14 } ]
        build: [ Release, Debug ]
        test: [ Test_Drivers_bno055_uart,
                Test_Drivers_bno055,
                Test_Drivers_ppm,
                Test_Drivers_protobuf,
                Test_Drivers_sbus,
                Test_Components_flightcomputer,
                Test_Components_imu,
                Test_Components_servo_motor
                Test_Components_remote ]
    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}
      REPORT_FILE: ${{ matrix.cc }}_${{ matrix.build }}_${{ matrix.test }}.xml
      GTEST_ARGS: --gtest_repeat=1000 --gtest_shuffle --gtest_output=xml:${REPORT_FILE}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget g++-9 g++-10 g++-11 protobuf-compiler valgrind
          # Taken from https://apt.llvm.org/
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 9
          sudo ./llvm.sh 10
          sudo ./llvm.sh 11
          sudo ./llvm.sh 12
          sudo ./llvm.sh 13
          sudo ./llvm.sh 14
      - name: Set up Build
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build }} ..
      - name: Build
        run: |
          cd build
          make -j$(nproc) ${{ matrix.test }}
      - name: Test
        run: |
          valgrind ./build/Tests/LowLevel/${{ matrix.test }} ${{ env.GTEST_ARGS }}
      - uses: actions/upload-artifact@v3
        with:
          name: report
          path: ${{ env.REPORT_FILE }}

  ConsolidateResults:
    runs-on: ubuntu-latest
    needs: LowLevelTests
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/download-artifact@v3
        with:
          name: report
      - uses: actions/setup-node@v2
      - name: Install report merger
        run: npm install -g junit-report-merger
      - name: Merge Results
        run: jrm combined.xml "*.xml"
      - uses: dorny/test-reporter@v1
        if: always()
        with:
            name: LowLevel
            path: combined.xml
            reporter: java-junit
            fail-on-error: true


