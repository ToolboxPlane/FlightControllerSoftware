name: Static Analysis
on: [ push ]

jobs:
  Clang-Tidy:
    runs-on: ubuntu-latest
    env:
      CC: avr-gcc
      CXX: avr-g++
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install Clang-Tidy
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy avr-libc binutils-avr gcc-avr protobuf-compiler python3-protobuf
      - name: Set up Build
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON  ..
          make -j$(nproc) all
          cp compile_commands.json ..
      - name: Run Clang Tidy
        run: run-clang-tidy -j$(nproc) -quiet | tee clangtidy.log
      - name: Check Clang Tidy Result
        run: if grep "error" clangtidy.log; then exit 1; fi;

  Clang-Format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install clang-format
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tools python3
          wget 'https://github.com/Sarcasm/run-clang-format/raw/39081c9c42768ab5e8321127a7494ad1647c6a2f/run-clang-format.py'
      - name: Run Clang-Format
        run: python3 run-clang-format.py --recursive --exclude ./build --color always .

  CheckDoc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen
      - name: Prepare Doxyfile
        run: |
          echo "WARN_IF_UNDOCUMENTED = YES" >> Doxyfile
          echo "WARN_IF_DOC_ERROR = YES" >> Doxyfile
          echo "WARN_NO_PARAMDOC = YES" >> Doxyfile
          echo "WARN_AS_ERROR = YES" >> Doxyfile
      - name: Run doxygen
        run: doxygen




